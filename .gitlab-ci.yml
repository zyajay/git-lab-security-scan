# When using dind, it's wise to use the overlayfs driver for
# improved performance.
variables:
  DS_DEFAULT_ANALYZERS: bundler-audit,retire.js,gemnasium,gemnasium-maven,gemnasium-python
  DOCKER_DRIVER: overlay2
  MAJOR: 2

services:
  - docker:stable-dind

stages:
  - go
  - test
  - build
  - deploy

.go:
  image: golang:1.11.3
  stage: go
  variables:
    GO111MODULE: "on"
  before_script:
    - mkdir -p /go/src/gitlab.com/${CI_PROJECT_PATH}
    - cp -r . /go/src/gitlab.com/${CI_PROJECT_PATH}
    - cd /go/src/gitlab.com/${CI_PROJECT_PATH}

go build:
  extends: .go
  variables:
    CGO_ENABLED: 0
  script:
    - go get ./...
    - go build -o ${CI_PROJECT_DIR}/dependency-scanning
  artifacts:
    paths:
    - dependency-scanning

go test:
  extends: .go
  script:
    - go get ./...
    - go test -race -cover -v ./...

go lint:
  extends: .go
  script:
    - go get -u golang.org/x/lint/golint
    - golint -set_exit_status

test:
  image: docker:stable
  stage: test
  variables:
    DS_ANALYZER_IMAGE_TAG: $MAJOR
  script:
    - ./test.sh
  dependencies:
    - go build

.build:
  image: docker:stable
  stage: build
  script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - export IMAGE=$CI_REGISTRY_IMAGE:$IMAGE_TAG
    - docker build -t $IMAGE --build-arg DS_ANALYZER_IMAGE_TAG=$DS_ANALYZER_IMAGE_TAG .
    - docker push $IMAGE
  dependencies:
    - go build

build branch:
  extends: .build
  variables:
    IMAGE_TAG: $CI_COMMIT_REF_NAME
    DS_ANALYZER_IMAGE_TAG: $MAJOR
  only:
    - branches
  except:
    - master

build edge:
  extends: .build
  variables:
    IMAGE_TAG: edge
    DS_ANALYZER_IMAGE_TAG: edge
  only:
    - master

build tag:
  extends: .build
  before_script:
    - export IMAGE_TAG=${CI_COMMIT_TAG/v/}
  variables:
    DS_ANALYZER_IMAGE_TAG: $MAJOR
  only:
    - tags

build major:
  extends: .build
  variables:
    IMAGE_TAG: $MAJOR
    DS_ANALYZER_IMAGE_TAG: $MAJOR
  only:
    - tags
  when: manual
  allow_failure: false

tag latest:
  image: docker:stable
  stage: deploy
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - export SOURCE_IMAGE=$CI_REGISTRY_IMAGE:$MAJOR
    - export TARGET_IMAGE=$CI_REGISTRY_IMAGE:latest
  script:
    - docker pull $SOURCE_IMAGE
    - docker tag $SOURCE_IMAGE $TARGET_IMAGE
    - docker push $TARGET_IMAGE
  only:
    - tags

.deploy:
  image: docker:stable
  stage: deploy
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - export IMAGE=$CI_REGISTRY_IMAGE:$CI_JOB_NAME
  script:
    - docker build -t $IMAGE -f $DOCKERFILE --build-arg DS_ANALYZER_IMAGE_TAG=$MAJOR .
    - docker push $IMAGE
  only:
    - tags

11-8-stable:
  extends: .deploy
  variables:
    DOCKERFILE: Dockerfile.v2

11-7-stable:
  extends: .deploy
  variables:
    DOCKERFILE: Dockerfile.v2
